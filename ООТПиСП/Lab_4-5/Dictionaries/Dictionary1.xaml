<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
    <SolidColorBrush x:Key="TextBox.Static.Border" Color="#FFABAdB3"/>
    <SolidColorBrush x:Key="TextBox.MouseOver.Border" Color="#FF7EB4EA"/>
    <SolidColorBrush x:Key="TextBox.Focus.Border" Color="#FF569DE5"/>
    <Style x:Key="DefaultButton" TargetType="Button">
        <Setter Property="Foreground" Value="White" />
        <Setter Property="Background" Value="#007acc" />
        <Setter Property="Padding" Value="10" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="BorderBrush" Value="#007acc" />
        <Setter Property="FontWeight" Value="Bold" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border BorderThickness="{TemplateBinding BorderThickness}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            Background="{TemplateBinding Background}"
                            Padding="{TemplateBinding Padding}">
                        <ContentPresenter HorizontalAlignment="Center"
                      VerticalAlignment="Center" />
                    </Border>

                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsEnabled" Value="True"/>
                    <Condition Property="IsMouseOver" Value="True"/>
                </MultiTrigger.Conditions>
                <MultiTrigger.Setters>
                    <Setter Property="Foreground" Value="White"/>
                    <Setter Property="Background" Value="Purple"/>
                </MultiTrigger.Setters>
            </MultiTrigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="HeaderButton" TargetType="Button" BasedOn="{StaticResource DefaultButton}">
        <Setter Property="Background" Value="White"/>
        <Setter Property="Foreground" Value="Black"/>
    </Style>
    
    <Style TargetType="DataGrid">
        <Setter Property="Foreground" Value="Black" />
        <Setter Property="Background" Value="White" />
        <Setter Property="AlternatingRowBackground" Value="#F2F2F2" />
        <Setter Property="GridLinesVisibility" Value="All" />
        <Setter Property="RowHeight" Value="30" />
        <Setter Property="CanUserResizeColumns" Value="True" />
        <Setter Property="CanUserResizeRows" Value="False" />
        <Setter Property="CanUserSortColumns" Value="True" />
        <Setter Property="AutoGenerateColumns" Value="False" />
    </Style>
    
    <Style TargetType="DataGridRow">
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="BorderBrush" Value="Black" />
        <Setter Property="Margin" Value="0" />
        <Setter Property="Padding" Value="0" />
        <Setter Property="SnapsToDevicePixels" Value="True" />
    </Style>
    
    <Style TargetType="DataGridCell" x:Key="ProductCellStyle">
        <Setter Property="Padding" Value="10"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="BorderBrush" Value="Gray"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="DataGridCell">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="Auto"/>
                        </Grid.ColumnDefinitions>
                        <Image Grid.Column="0" Source="{Binding Image}" Width="50" Height="50"/>
                        <StackPanel Grid.Column="1" Margin="10,0,0,0">
                            <TextBlock Text="{Binding Title}" FontSize="16"/>
                            <TextBlock Text="{Binding Description}" Margin="0,5,0,0"/>
                        </StackPanel>
                        <TextBlock Grid.Column="2" Text="{Binding Price, StringFormat=C}" FontSize="16"/>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    
    <Style TargetType="DataGridColumnHeader">
        <Setter Property="FontWeight" Value="Bold" />
        <Setter Property="HorizontalAlignment" Value="Center" />
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="Padding" Value="5" />
        <Setter Property="Background" Value="#EFEFEF" />
    </Style>
    
    <Style x:Key="MyTextBlockStyle" TargetType="TextBlock">
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="HorizontalAlignment" Value="Right"/>
        <Setter Property="TextAlignment" Value="Center"/>
        <Setter Property="TextWrapping" Value="Wrap"/>
        <Setter Property="Margin" Value="5 5"/>
        <Setter Property="FontSize" Value="18"/>
    </Style>

    <Style x:Key="MyImageStyle" TargetType="Image">
        <Setter Property="Width" Value="200"/>
        <Setter Property="Grid.Column" Value="0"/>
        <Setter Property="Stretch" Value="UniformToFill"/>
        <Setter Property="HorizontalAlignment" Value="Center"/>
        <Setter Property="Margin" Value="5"/>
    </Style>

    <Style x:Key="ListViewStyle" TargetType="ListView">
        <Setter Property="Grid.Row" Value="1"/>
        <Setter Property="Width" Value="1100"/>
        <Setter Property="Margin" Value="0,20"/>
        <Setter Property="Background" Value="#FFFAFA"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="ItemContainerStyle">
            <Setter.Value>
                <Style TargetType="ListViewItem">
                    <Setter Property="Margin" Value="0 0 0 20"/>
                    <Setter Property="Background" Value="#FFFFFF"/>
                    <Setter Property="BorderBrush" Value="#D3D3D3"/>
                    <Setter Property="BorderThickness" Value="2"/>
                    <Style.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="IsSelected" Value="True"/>
                        </Trigger>
                    </Style.Triggers>
                </Style>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ComboBoxStyle" TargetType="ComboBox">
        <Setter Property="Margin" Value="0,15,0,0"/>
        <Setter Property="Width" Value="150"/>
        <Setter Property="Height" Value="25"/>
        <Setter Property="SelectedIndex" Value="0"/>
    </Style>


    <Style x:Key="LanguageButton" TargetType="Button">
        <Setter Property="Background" Value="White"/>
        <Setter Property="Foreground" Value="Black"/>
        <Setter Property="BorderThickness" Value="2"/>
        <Setter Property="BorderBrush" Value="#D3D3D3"/>
        <Setter Property="Margin" Value="0,0,10,0"/>
    </Style>

    <Style x:Key="RuLanguageButtonStyle" TargetType="Button" BasedOn="{StaticResource HeaderButton}">
        <Style.Triggers>
            <DataTrigger Binding="{Binding IsRussianSelected}" Value="True">
                <Setter Property="Background" Value="Black"/>
                <Setter Property="Foreground" Value="White"/>
            </DataTrigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="EnLanguageButtonStyle" TargetType="Button" BasedOn="{StaticResource HeaderButton}">
        <Style.Triggers>
            <DataTrigger Binding="{Binding IsEnglishSelected}" Value="True">
                <Setter Property="Background" Value="Black"/>
                <Setter Property="Foreground" Value="White"/>
            </DataTrigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="SearchTextBlockStyle" TargetType="{x:Type TextBlock}">
        <Setter Property="IsHitTestVisible" Value="False"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="HorizontalAlignment" Value="Left"/>
        <Setter Property="Margin" Value="10,0,0,0"/>
        <Setter Property="Opacity" Value="0.5"/>
        <Setter Property="Foreground" Value="#FFFFFF"/>
    </Style>

    <Style x:Key="SearchTextBoxStyle" TargetType="TextBox">
        <Setter Property="Background" Value="#000"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Padding" Value="10,0,0,0"/>
        <Setter Property="Opacity" Value="0.2"/>
        <Setter Property="Height" Value="40"/>
        <Setter Property="Foreground" Value="#FFFF"/>
        <Setter Property="Width" Value="300"/>
        <Setter Property="HorizontalAlignment" Value="Left"/>
        <Setter Property="IsHitTestVisible" Value="True"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TextBox}">
                    <Border x:Name="border" Background="{TemplateBinding Background}" CornerRadius="5" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" SnapsToDevicePixels="True">
                        <ScrollViewer x:Name="PART_ContentHost" Focusable="false" HorizontalScrollBarVisibility="Hidden" VerticalScrollBarVisibility="Hidden"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Opacity" TargetName="border" Value="0.56"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource TextBox.MouseOver.Border}"/>
                        </Trigger>
                        <Trigger Property="IsKeyboardFocused" Value="true">
                            <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource TextBox.Focus.Border}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsInactiveSelectionHighlightEnabled" Value="true"/>
                    <Condition Property="IsSelectionActive" Value="false"/>
                </MultiTrigger.Conditions>
                <Setter Property="SelectionBrush" Value="{DynamicResource {x:Static SystemColors.InactiveSelectionHighlightBrushKey}}"/>
            </MultiTrigger>
            <EventTrigger RoutedEvent="MouseEnter">
                <EventTrigger.Actions>
                    <BeginStoryboard>
                        <Storyboard>
                            <DoubleAnimation Storyboard.TargetProperty="Width" To="450" Duration="0:0:0.3"/>
                        </Storyboard>
                    </BeginStoryboard>
                </EventTrigger.Actions>
            </EventTrigger>
            <EventTrigger RoutedEvent="MouseLeave">
                <EventTrigger.Actions>
                    <BeginStoryboard>
                        <Storyboard>
                            <DoubleAnimation Storyboard.TargetProperty="Width" To="300" Duration="0:0:0.3"/>
                        </Storyboard>
                    </BeginStoryboard>
                </EventTrigger.Actions>
            </EventTrigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="LogoTextBlockStyle" TargetType="TextBlock">
        <Setter Property="Foreground" Value="White"/>
        <Setter Property="FontSize" Value="18"/>
        <Setter Property="Width" Value="110"/>
        <Setter Property="FontFamily" Value="Roboto"/>
        <Setter Property="FontWeight" Value="Medium"/>
        <Setter Property="HorizontalAlignment" Value="Left"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="Margin" Value="130,0,0,0"/>
    </Style>

    <Style x:Key="OfferTextBlockStyle" TargetType="TextBlock">
        <Setter Property="Foreground" Value="Black" />
        <Setter Property="FontSize" Value="30" />
        <Setter Property="FontFamily" Value="Roboto" />
        <Setter Property="FontWeight" Value="Medium" />
        <Setter Property="HorizontalAlignment" Value="Center" />
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="Margin" Value="130,0,0,0" />
    </Style>

    <SolidColorBrush x:Key="Font" Color="Black"/>

    <SolidColorBrush x:Key="HeaderBackground" Color="#00A3FF"/>
    <SolidColorBrush x:Key="MainBackground" Color="#FFFAFA"/>
    <Style TargetType="Grid" x:Key="Header">
        <Setter Property="Background" Value="{DynamicResource HeaderBackground}"/>
    </Style>
    <Style TargetType="Grid" x:Key="Main">
        <Setter Property="Background" Value="{DynamicResource MainBackground}"/>
        <Setter Property="Margin" Value="0,10,0,0"/>
    </Style>
</ResourceDictionary>